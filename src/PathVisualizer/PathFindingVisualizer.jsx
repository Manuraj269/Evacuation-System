import React, { useState, useEffect } from "react";
import Node from "./Node/Node";
import "./PathFindingVisualizer.css";

import { visualizeAstar, clearGrid } from "./Functions";
import NavBar from "./Navbar";

let START_NODE_ROW = 25;
let START_NODE_COL = 18;
let endr1 = 7;
let endr2 = 13;
let endr3 = 46;
let endr4 = 1;

let endc1 = 35;
let endc2 = 84;
let endc3 = 66;
let endc4 = 98;

function PathFindingVisualizer() {
  const createNode = (col, row) => {
    return {
      col,
      row,
      isStart: row === START_NODE_ROW && col === START_NODE_COL,
      isFinish:
        (row === endr1 && col === endc1) ||
        (row === endr2 && col === endc2) ||
        (row === endr3 && col === endc3) ||
        (row === endr4 && col === endc4),
      distance: Infinity,
      isBomb: false,
      isFire: false,
      isVisited: false,
      isWall: false,
      previousNode: null,
      fScore: 0,
      gScore: 0,
    };
  };

  const getInitialGrid = () => {
    const temp = [];
    for (let row = 0; row < 50; row++) {
      const currentRow = [];
      for (let col = 0; col < 100; col++) {
        currentRow.push(createNode(col, row));
      }
      temp.push(currentRow);
    }
    let a = [
      [0, 0],
      [0, 1],
      [0, 2],
      [0, 3],
      [0, 4],
      [0, 5],
      [0, 6],
      [0, 7],
      [0, 8],
      [0, 9],
      [0, 10],
      [0, 11],
      [0, 12],
      [0, 13],
      [0, 14],
      [0, 15],
      [0, 16],
      [0, 17],
      [0, 18],
      [0, 19],
      [0, 20],
      [0, 21],
      [0, 22],
      [0, 23],
      [0, 24],
      [0, 25],
      [0, 26],
      [0, 27],
      [0, 28],
      [0, 29],
      [0, 30],
      [0, 31],
      [0, 32],
      [0, 33],
      [0, 34],
      [0, 35],
      [0, 36],
      [0, 37],
      [0, 38],
      [0, 39],
      [0, 40],
      [0, 41],
      [0, 42],
      [0, 43],
      [0, 44],
      [0, 45],
      [0, 46],
      [0, 47],
      [0, 48],
      [0, 49],
      [0, 50],
      [0, 51],
      [0, 52],
      [0, 53],
      [0, 54],
      [0, 55],
      [0, 56],
      [0, 57],
      [0, 58],
      [0, 59],
      [0, 60],
      [0, 61],
      [0, 62],
      [0, 63],
      [0, 64],
      [0, 65],
      [0, 66],
      [0, 67],
      [0, 68],
      [0, 69],
      [0, 70],
      [0, 71],
      [0, 72],
      [0, 73],
      [0, 74],
      [0, 75],
      [0, 76],
      [0, 77],
      [0, 78],
      [0, 79],
      [0, 80],
      [0, 81],
      [0, 82],
      [0, 83],
      [0, 84],
      [0, 85],
      [0, 86],
      [0, 87],
      [0, 88],
      [0, 89],
      [0, 90],
      [0, 91],
      [0, 92],
      [0, 93],
      [0, 94],
      [0, 95],
      [0, 96],
      [0, 97],
      [0, 98],
      [0, 99],
      [1, 0],
      [1, 18],
      [1, 19],
      [1, 20],
      [1, 31],
      [1, 32],
      [1, 33],
      [1, 34],
      [1, 35],
      [1, 36],
      [1, 37],
      [1, 38],
      [1, 39],
      [1, 51],
      [1, 65],
      [1, 77],
      [1, 99],
      [2, 0],
      [2, 18],
      [2, 19],
      [2, 20],
      [2, 31],
      [2, 32],
      [2, 33],
      [2, 34],
      [2, 35],
      [2, 36],
      [2, 37],
      [2, 38],
      [2, 39],
      [2, 51],
      [2, 65],
      [2, 77],
      [2, 99],
      [3, 0],
      [3, 18],
      [3, 19],
      [3, 20],
      [3, 31],
      [3, 32],
      [3, 33],
      [3, 34],
      [3, 35],
      [3, 36],
      [3, 37],
      [3, 38],
      [3, 39],
      [3, 51],
      [3, 65],
      [3, 77],
      [3, 99],
      [4, 0],
      [4, 18],
      [4, 19],
      [4, 20],
      [4, 31],
      [4, 32],
      [4, 33],
      [4, 34],
      [4, 35],
      [4, 36],
      [4, 37],
      [4, 38],
      [4, 39],
      [4, 51],
      [4, 65],
      [4, 77],
      [4, 99],
      [5, 0],
      [5, 18],
      [5, 19],
      [5, 20],
      [5, 31],
      [5, 32],
      [5, 33],
      [5, 34],
      [5, 35],
      [5, 36],
      [5, 37],
      [5, 38],
      [5, 39],
      [5, 51],
      [5, 65],
      [5, 77],
      [5, 99],
      [6, 0],
      [6, 18],
      [6, 19],
      [6, 20],
      [6, 31],
      [6, 32],
      [6, 33],
      [6, 34],
      [6, 35],
      [6, 36],
      [6, 37],
      [6, 38],
      [6, 39],
      [6, 51],
      [6, 65],
      [6, 77],
      [6, 83],
      [6, 99],
      [7, 0],
      [7, 18],
      [7, 19],
      [7, 20],
      [7, 31],
      [7, 32],
      [7, 33],
      [7, 34],
      [7, 36],
      [7, 37],
      [7, 38],
      [7, 39],
      [7, 51],
      [7, 65],
      [7, 77],
      [7, 83],
      [7, 99],
      [8, 0],
      [8, 18],
      [8, 19],
      [8, 20],
      [8, 31],
      [8, 39],
      [8, 51],
      [8, 65],
      [8, 77],
      [8, 83],
      [8, 99],
      [9, 0],
      [9, 18],
      [9, 19],
      [9, 20],
      [9, 31],
      [9, 39],
      [9, 51],
      [9, 65],
      [9, 77],
      [9, 83],
      [9, 99],
      [10, 0],
      [10, 18],
      [10, 19],
      [10, 20],
      [10, 31],
      [10, 39],
      [10, 51],
      [10, 65],
      [10, 77],
      [10, 83],
      [10, 99],
      [11, 0],
      [11, 18],
      [11, 19],
      [11, 20],
      [11, 31],
      [11, 39],
      [11, 51],
      [11, 65],
      [11, 77],
      [11, 83],
      [11, 99],
      [12, 0],
      [12, 18],
      [12, 19],
      [12, 20],
      [12, 31],
      [12, 39],
      [12, 51],
      [12, 65],
      [12, 76],
      [12, 77],
      [12, 83],
      [12, 99],
      [13, 0],
      [13, 18],
      [13, 22],
      [13, 31],
      [13, 39],
      [13, 51],
      [13, 65],
      [13, 75],
      [13, 83],
      [13, 99],
      [14, 0],
      [14, 18],
      [14, 22],
      [14, 31],
      [14, 39],
      [14, 51],
      [14, 65],
      [14, 75],
      [14, 83],
      [14, 84],
      [14, 85],
      [14, 86],
      [14, 87],
      [14, 88],
      [14, 89],
      [14, 90],
      [14, 91],
      [14, 92],
      [14, 99],
      [15, 0],
      [15, 18],
      [15, 22],
      [15, 23],
      [15, 24],
      [15, 25],
      [15, 26],
      [15, 27],
      [15, 28],
      [15, 29],
      [15, 31],
      [15, 39],
      [15, 41],
      [15, 42],
      [15, 43],
      [15, 44],
      [15, 45],
      [15, 46],
      [15, 47],
      [15, 48],
      [15, 49],
      [15, 51],
      [15, 52],
      [15, 65],
      [15, 75],
      [15, 99],
      [16, 0],
      [16, 18],
      [16, 52],
      [16, 65],
      [16, 75],
      [16, 99],
      [17, 0],
      [17, 18],
      [17, 52],
      [17, 65],
      [17, 75],
      [17, 99],
      [18, 0],
      [18, 18],
      [18, 52],
      [18, 54],
      [18, 55],
      [18, 56],
      [18, 57],
      [18, 58],
      [18, 59],
      [18, 60],
      [18, 61],
      [18, 62],
      [18, 63],
      [18, 65],
      [18, 67],
      [18, 68],
      [18, 69],
      [18, 70],
      [18, 71],
      [18, 72],
      [18, 73],
      [18, 75],
      [18, 99],
      [19, 0],
      [19, 18],
      [19, 99],
      [20, 0],
      [20, 18],
      [20, 88],
      [20, 99],
      [21, 0],
      [21, 18],
      [21, 88],
      [21, 99],
      [22, 0],
      [22, 18],
      [22, 88],
      [22, 99],
      [23, 0],
      [23, 18],
      [23, 88],
      [23, 99],
      [24, 0],
      [24, 18],
      [24, 88],
      [24, 99],
      [25, 0],
      [25, 88],
      [25, 99],
      [26, 0],
      [26, 1],
      [26, 2],
      [26, 3],
      [26, 4],
      [26, 5],
      [26, 6],
      [26, 7],
      [26, 8],
      [26, 9],
      [26, 10],
      [26, 11],
      [26, 12],
      [26, 13],
      [26, 14],
      [26, 15],
      [26, 16],
      [26, 17],
      [26, 18],
      [26, 88],
      [26, 99],
      [27, 0],
      [27, 88],
      [27, 99],
      [28, 0],
      [28, 18],
      [28, 88],
      [28, 99],
      [29, 0],
      [29, 18],
      [29, 88],
      [29, 99],
      [30, 0],
      [30, 18],
      [30, 31],
      [30, 33],
      [30, 34],
      [30, 35],
      [30, 36],
      [30, 37],
      [30, 38],
      [30, 39],
      [30, 40],
      [30, 41],
      [30, 42],
      [30, 43],
      [30, 44],
      [30, 45],
      [30, 46],
      [30, 47],
      [30, 48],
      [30, 49],
      [30, 51],
      [30, 53],
      [30, 54],
      [30, 55],
      [30, 56],
      [30, 57],
      [30, 58],
      [30, 59],
      [30, 60],
      [30, 61],
      [30, 62],
      [30, 63],
      [30, 64],
      [30, 65],
      [30, 67],
      [30, 69],
      [30, 70],
      [30, 71],
      [30, 72],
      [30, 73],
      [30, 74],
      [30, 75],
      [30, 76],
      [30, 88],
      [30, 99],
      [31, 0],
      [31, 18],
      [31, 31],
      [31, 51],
      [31, 67],
      [31, 78],
      [31, 88],
      [31, 99],
      [32, 0],
      [32, 18],
      [32, 31],
      [32, 51],
      [32, 67],
      [32, 78],
      [32, 99],
      [33, 0],
      [33, 18],
      [33, 31],
      [33, 51],
      [33, 67],
      [33, 78],
      [33, 99],
      [34, 0],
      [34, 18],
      [34, 31],
      [34, 51],
      [34, 67],
      [34, 78],
      [34, 99],
      [35, 0],
      [35, 18],
      [35, 31],
      [35, 51],
      [35, 67],
      [35, 78],
      [35, 81],
      [35, 99],
      [36, 0],
      [36, 18],
      [36, 31],
      [36, 51],
      [36, 67],
      [36, 78],
      [36, 81],
      [36, 99],
      [37, 0],
      [37, 31],
      [37, 51],
      [37, 67],
      [37, 78],
      [37, 81],
      [37, 99],
      [38, 0],
      [38, 1],
      [38, 2],
      [38, 3],
      [38, 4],
      [38, 5],
      [38, 6],
      [38, 7],
      [38, 8],
      [38, 9],
      [38, 10],
      [38, 11],
      [38, 12],
      [38, 13],
      [38, 14],
      [38, 15],
      [38, 16],
      [38, 17],
      [38, 18],
      [38, 19],
      [38, 31],
      [38, 51],
      [38, 67],
      [38, 78],
      [38, 81],
      [38, 99],
      [39, 0],
      [39, 1],
      [39, 2],
      [39, 3],
      [39, 4],
      [39, 5],
      [39, 6],
      [39, 7],
      [39, 8],
      [39, 9],
      [39, 10],
      [39, 11],
      [39, 12],
      [39, 13],
      [39, 14],
      [39, 15],
      [39, 16],
      [39, 17],
      [39, 18],
      [39, 19],
      [39, 20],
      [39, 21],
      [39, 22],
      [39, 23],
      [39, 24],
      [39, 31],
      [39, 51],
      [39, 67],
      [39, 78],
      [39, 81],
      [39, 99],
      [40, 0],
      [40, 31],
      [40, 51],
      [40, 67],
      [40, 78],
      [40, 81],
      [40, 99],
      [41, 0],
      [41, 24],
      [41, 31],
      [41, 51],
      [41, 67],
      [41, 78],
      [41, 81],
      [41, 82],
      [41, 83],
      [41, 84],
      [41, 85],
      [41, 86],
      [41, 87],
      [41, 88],
      [41, 89],
      [41, 90],
      [41, 99],
      [42, 0],
      [42, 24],
      [42, 31],
      [42, 51],
      [42, 67],
      [42, 78],
      [42, 81],
      [42, 82],
      [42, 83],
      [42, 84],
      [42, 85],
      [42, 86],
      [42, 87],
      [42, 88],
      [42, 89],
      [42, 90],
      [42, 99],
      [43, 0],
      [43, 24],
      [43, 31],
      [43, 51],
      [43, 67],
      [43, 78],
      [43, 99],
      [44, 0],
      [44, 24],
      [44, 31],
      [44, 32],
      [44, 33],
      [44, 34],
      [44, 35],
      [44, 36],
      [44, 37],
      [44, 38],
      [44, 39],
      [44, 40],
      [44, 41],
      [44, 42],
      [44, 43],
      [44, 44],
      [44, 45],
      [44, 46],
      [44, 47],
      [44, 48],
      [44, 49],
      [44, 50],
      [44, 51],
      [44, 52],
      [44, 53],
      [44, 54],
      [44, 55],
      [44, 56],
      [44, 57],
      [44, 58],
      [44, 59],
      [44, 60],
      [44, 61],
      [44, 62],
      [44, 63],
      [44, 64],
      [44, 65],
      [44, 66],
      [44, 67],
      [44, 68],
      [44, 69],
      [44, 70],
      [44, 71],
      [44, 72],
      [44, 73],
      [44, 74],
      [44, 75],
      [44, 76],
      [44, 77],
      [44, 78],
      [44, 80],
      [44, 81],
      [44, 82],
      [44, 99],
      [45, 0],
      [45, 24],
      [45, 67],
      [45, 82],
      [45, 99],
      [46, 0],
      [46, 24],
      [46, 67],
      [46, 82],
      [46, 85],
      [46, 86],
      [46, 87],
      [46, 88],
      [46, 89],
      [46, 90],
      [46, 91],
      [46, 92],
      [46, 93],
      [46, 94],
      [46, 95],
      [46, 96],
      [46, 97],
      [46, 98],
      [46, 99],
      [47, 0],
      [47, 67],
      [47, 82],
      [47, 85],
      [47, 86],
      [47, 87],
      [47, 88],
      [47, 89],
      [47, 90],
      [47, 91],
      [47, 92],
      [47, 93],
      [47, 94],
      [47, 95],
      [47, 96],
      [47, 97],
      [47, 98],
      [47, 99],
      [48, 0],
      [48, 1],
      [48, 2],
      [48, 3],
      [48, 4],
      [48, 5],
      [48, 6],
      [48, 7],
      [48, 8],
      [48, 9],
      [48, 10],
      [48, 11],
      [48, 12],
      [48, 13],
      [48, 14],
      [48, 15],
      [48, 16],
      [48, 17],
      [48, 18],
      [48, 19],
      [48, 20],
      [48, 21],
      [48, 22],
      [48, 23],
      [48, 24],
      [48, 67],
      [48, 68],
      [48, 69],
      [48, 70],
      [48, 71],
      [48, 72],
      [48, 73],
      [48, 74],
      [48, 75],
      [48, 76],
      [48, 77],
      [48, 78],
      [48, 79],
      [48, 80],
      [48, 81],
      [48, 82],
      [48, 85],
      [48, 86],
      [48, 87],
      [48, 88],
      [48, 89],
      [48, 90],
      [48, 91],
      [48, 92],
      [48, 93],
      [48, 94],
      [48, 95],
      [48, 96],
      [48, 97],
      [48, 98],
      [48, 99],
      [49, 0],
      [49, 1],
      [49, 2],
      [49, 3],
      [49, 4],
      [49, 5],
      [49, 6],
      [49, 7],
      [49, 8],
      [49, 9],
      [49, 10],
      [49, 11],
      [49, 12],
      [49, 13],
      [49, 14],
      [49, 15],
      [49, 16],
      [49, 17],
      [49, 18],
      [49, 19],
      [49, 20],
      [49, 21],
      [49, 22],
      [49, 23],
      [49, 24],
      [49, 25],
      [49, 26],
      [49, 27],
      [49, 28],
      [49, 29],
      [49, 30],
      [49, 31],
      [49, 32],
      [49, 33],
      [49, 34],
      [49, 35],
      [49, 36],
      [49, 37],
      [49, 38],
      [49, 39],
      [49, 40],
      [49, 41],
      [49, 42],
      [49, 43],
      [49, 44],
      [49, 45],
      [49, 46],
      [49, 47],
      [49, 48],
      [49, 49],
      [49, 50],
      [49, 51],
      [49, 52],
      [49, 53],
      [49, 54],
      [49, 55],
      [49, 56],
      [49, 57],
      [49, 58],
      [49, 59],
      [49, 60],
      [49, 61],
      [49, 62],
      [49, 63],
      [49, 64],
      [49, 65],
      [49, 66],
      [49, 67],
      [49, 68],
      [49, 69],
      [49, 70],
      [49, 71],
      [49, 72],
      [49, 73],
      [49, 74],
      [49, 75],
      [49, 76],
      [49, 77],
      [49, 78],
      [49, 79],
      [49, 80],
      [49, 81],
      [49, 82],
      [49, 83],
      [49, 84],
      [49, 85],
      [49, 86],
      [49, 87],
      [49, 88],
      [49, 89],
      [49, 90],
      [49, 91],
      [49, 92],
      [49, 93],
      [49, 94],
      [49, 95],
      [49, 96],
      [49, 97],
      [49, 98],
      [49, 99],
    ];
    for (let i = 0; i < a.length; i++) {
      for (let j = 0; j < 2; j++) {
        temp[a[i][0]][a[i][1]].isWall = true;
      }
    }
    temp[0][0].isWall = true;
    return temp;
  };

  const tempi = getInitialGrid();

  const [grid, setGrid] = useState(tempi);
  const [mouseIsPressed, setMouseIsPressed] = useState(false);
  const [isStartNodeLifted, setisStartNodeLifted] = useState(false);
  const [states, setStates] = useState(false);
  const [sim, setSim] = useState(false);

  const handleMouseDown = (row, col) => {
    if (row === START_NODE_ROW && col === START_NODE_COL) {
      setisStartNodeLifted(true);
      setStates(true);
    } else {
      const tempGrid = grid.slice();
      const newGrid = getNewGridWithWallToggled(tempGrid, row, col);
      setGrid(newGrid);
      setMouseIsPressed(true);
    }
  };

  const handleMouseEnter = (row, col) => {
    if (!mouseIsPressed) {
      console.log(grid[row][col]);
      return;
    }
    const tempGrid = grid.slice();
    const newGrid = getNewGridWithWallToggled(tempGrid, row, col);
    setGrid(newGrid);
  };

  const handleMouseUp = (row, col) => {
    setMouseIsPressed(false);
    if (sim) {
      visualizeAstar(grid);
    }
  };

  useEffect(() => {
    if (!mouseIsPressed) {
      setisStartNodeLifted(false);
    }
  }, [mouseIsPressed]);

  const getNewGridWithWallToggled = (tempGrid, row, col) => {
    const newGrid = tempGrid.slice();
    const node = newGrid[row][col];
    // console.log(grid[row][col]);
    const newNode = {
      ...node,
      // isWall: !node.isWall,
      isFire: !node.isFire,
    };
    newGrid[row][col] = newNode;
    return newGrid;
  };

  return (
    <>
      <div className="whole">
        <NavBar
          handleClearGrid={clearGrid}
          handleAstar={visualizeAstar}
          grid={grid}
          setGrid={setGrid}
          setSim={setSim}
          sim={sim}
        />
        <div className="grid">
          {grid.map((row, rowIdx) => {
            return (
              <div key={rowIdx} className="rowz">
                {row.map((node, rowIdx) => {
                  const {
                    row,
                    col,
                    isStart,
                    isFinish,
                    isVisited,
                    isWall,
                    isFire,
                  } = node;
                  return (
                    <Node
                      row={row}
                      col={col}
                      key={rowIdx}
                      isStart={isStart}
                      isFinish={isFinish}
                      isVisited={isVisited}
                      isWall={isWall}
                      isFire={isFire}
                      mouseIsPressed={mouseIsPressed}
                      onMouseDown={(row, col) => handleMouseDown(row, col)}
                      onMouseUp={(row, col) => handleMouseUp(row, col)}
                      onMouseEnter={(row, col) => handleMouseEnter(row, col)}
                    ></Node>
                  );
                })}
              </div>
            );
          })}
        </div>
      </div>
    </>
  );
}

export default PathFindingVisualizer;
